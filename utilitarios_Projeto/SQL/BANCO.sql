/* SQL Manager 2005 for InterBase and Firebird 4.3.0.1              */
/* ---------------------------------------------------------------- */
/* Host     : localhost                                             */
/* Database : C:\USERS\GHOST\ECLIPSE-WORKSPACE\GVIEWTESTE\BANCO.FDB */


CREATE DATABASE 'C:\USERS\GHOST\ECLIPSE-WORKSPACE\GVIEWTESTE\BANCO.FDB'   USER 'SYSDBA'
   PAGE_SIZE 4096;


/* Definition for the `CLIENTE_ID_GEN` generator :  */

CREATE GENERATOR CLIENTE_ID_GEN;

SET GENERATOR CLIENTE_ID_GEN TO 3;

/* Definition for the `CONTADOR_ID_GEN` generator :  */

CREATE GENERATOR CONTADOR_ID_GEN;

SET GENERATOR CONTADOR_ID_GEN TO 1;

/* Definition for the `FISCAL_ID_GEN` generator :  */

CREATE GENERATOR FISCAL_ID_GEN;

/* Definition for the `STATUS_ID_GEN` generator :  */

CREATE GENERATOR STATUS_ID_GEN;

SET GENERATOR STATUS_ID_GEN TO 13;

/* Definition for the `TIPOSYS_ID_GEN` generator :  */

CREATE GENERATOR TIPOSYS_ID_GEN;

SET GENERATOR TIPOSYS_ID_GEN TO 6;

/* Definition for the `USER_ID_GEN` generator :  */

CREATE GENERATOR USER_ID_GEN;


/* Structure for the `CLIENTE` table :  */

CREATE TABLE CLIENTE (
  ID INTEGER NOT NULL,
  NOME VARCHAR(60) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  CNPJ VARCHAR(18) CHARACTER SET WIN1252 COLLATE WIN1252,
  SERIAL VARCHAR(20) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  TIPOSYS_ID INTEGER NOT NULL,
  TELEFONE VARCHAR(18) CHARACTER SET WIN1252 COLLATE WIN1252,
  CONTADOR_ID INTEGER NOT NULL,
  EMAIL VARCHAR(60) CHARACTER SET WIN1252 COLLATE WIN1252);


ALTER TABLE CLIENTE ADD PRIMARY KEY (ID);


/* Structure for the `CONTADOR` table :  */

CREATE TABLE CONTADOR (
  ID INTEGER NOT NULL,
  NOME VARCHAR(60) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  CNPJ VARCHAR(18) CHARACTER SET WIN1252 COLLATE WIN1252,
  TELEFONE VARCHAR(18) CHARACTER SET WIN1252 COLLATE WIN1252,
  EMAIL VARCHAR(60) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252);


ALTER TABLE CONTADOR ADD PRIMARY KEY (ID);


/* Structure for the `FISCAL` table :  */

CREATE TABLE FISCAL (
  ID INTEGER NOT NULL,
  CLIENTE_ID INTEGER NOT NULL,
  ANO_MES DATE NOT NULL,
  STATUS_ID INTEGER NOT NULL,
  DATA_ENVIO DATE);


ALTER TABLE FISCAL ADD PRIMARY KEY (ID);


/* Structure for the `STATUS` table :  */

CREATE TABLE STATUS (
  ID INTEGER NOT NULL,
  DESCRICAO VARCHAR(40) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  MODIFICADO DATE,
  USERID INTEGER NOT NULL);


ALTER TABLE STATUS ADD PRIMARY KEY (ID);


/* Structure for the `TIPOSYS` table :  */

CREATE TABLE TIPOSYS (
  ID INTEGER NOT NULL,
  VERSAO VARCHAR(20) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  MODIFICADO TIMESTAMP,
  USERID INTEGER NOT NULL);


ALTER TABLE TIPOSYS ADD PRIMARY KEY (ID);


/* Structure for the `USER` table :  */

CREATE TABLE "USER" (
  ID INTEGER NOT NULL,
  NOME VARCHAR(40) CHARACTER SET WIN1252 COLLATE WIN1252,
  USERNAME VARCHAR(15) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  PASSWD VARCHAR(255) CHARACTER SET WIN1252 NOT NULL COLLATE WIN1252,
  TELEFONE VARCHAR(18) CHARACTER SET WIN1252 COLLATE WIN1252,
  EMAIL VARCHAR(60) CHARACTER SET WIN1252 COLLATE WIN1252,
  MODIFICADO DATE);


ALTER TABLE "USER" ADD PRIMARY KEY (ID);


/* Data for the `CLIENTE` table  (Records 1 - 2) */

INSERT INTO CLIENTE
VALUES (2, 'Cliente 1', '5516516', 'gtbq3455', 2, '256546', 0, NULL);

INSERT INTO CLIENTE
VALUES (3, 'Cliente 2', '56548', 'gth455546', 1, '654654', 1, NULL);

COMMIT WORK;

/* Data for the `CONTADOR` table  (Records 1 - 2) */

INSERT INTO CONTADOR
VALUES (0, 'CONTADOR 1', NULL, '12354', 'contador@contador.com.br');

INSERT INTO CONTADOR
VALUES (1, 'CONTADOR 2', NULL, '54321', 'contador2@contador.com.br');

COMMIT WORK;

/* Data for the `STATUS` table  (Records 1 - 4) */

INSERT INTO STATUS
VALUES (4, 'Concluido', NULL, 0);

INSERT INTO STATUS
VALUES (1, 'Pendente', NULL, 0);

INSERT INTO STATUS
VALUES (2, 'Aguardando Envio', NULL, 0);

INSERT INTO STATUS
VALUES (3, 'Falha no Envio', NULL, 0);

COMMIT WORK;

/* Data for the `TIPOSYS` table  (Records 1 - 4) */

INSERT INTO TIPOSYS
VALUES (1, 'GDOOR PRO', NULL, 0);

INSERT INTO TIPOSYS
VALUES (2, 'GDOOR SLIM', NULL, 0);

INSERT INTO TIPOSYS
VALUES (3, 'GDOOR CTE', NULL, 0);

INSERT INTO TIPOSYS
VALUES (4, 'GDOOR MEI', NULL, 0);

COMMIT WORK;

/* Data for the `USER` table  (Records 1 - 1) */

INSERT INTO "USER"
VALUES (0, 'walmirlsj', 'walmirlsj', '12345', '67996173944', 'walmir_004@hotmail.com', NULL);

COMMIT WORK;

/* Definition for the `FK_CLIENTE_CONTADOR` foreign key :  */

ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_CONTADOR FOREIGN KEY (CONTADOR_ID) REFERENCES CONTADOR(ID);

/* Definition for the `FK_CLIENTE_TIPOSYS` foreign key :  */

ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_TIPOSYS FOREIGN KEY (TIPOSYS_ID) REFERENCES TIPOSYS(ID);

/* Definition for the `FK_FISCAL_CLIENTE` foreign key :  */

ALTER TABLE FISCAL ADD CONSTRAINT FK_FISCAL_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE(ID);

/* Definition for the `FK_FISCAL_STATUS` foreign key :  */

ALTER TABLE FISCAL ADD CONSTRAINT FK_FISCAL_STATUS FOREIGN KEY (STATUS_ID) REFERENCES STATUS(ID);

/* Definition for the `FK_STATUS_USER` foreign key :  */

ALTER TABLE STATUS ADD CONSTRAINT FK_STATUS_USER FOREIGN KEY (USERID) REFERENCES "USER"(ID);

/* Definition for the `FK_TIPOSYS` foreign key :  */

ALTER TABLE TIPOSYS ADD CONSTRAINT FK_TIPOSYS FOREIGN KEY (USERID) REFERENCES "USER"(ID);


/* Definition for the `BI_CLIENTE_ID` trigger :  */

SET TERM ^ ;

CREATE TRIGGER BI_CLIENTE_ID FOR CLIENTE
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
      NEW.ID = GEN_ID(CLIENTE_ID_GEN, 1);
END^

SET TERM ; ^

/* Definition for the `BI_CONTADOR_ID` trigger :  */

SET TERM ^ ;

CREATE TRIGGER BI_CONTADOR_ID FOR CONTADOR
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
      NEW.ID = GEN_ID(CONTADOR_ID_GEN, 1);
END^

SET TERM ; ^

/* Definition for the `BI_FISCAL_ID` trigger :  */

SET TERM ^ ;

CREATE TRIGGER BI_FISCAL_ID FOR FISCAL
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
      NEW.ID = GEN_ID(FISCAL_ID_GEN, 1);
END^

SET TERM ; ^

/* Definition for the `BI_STATUS_ID` trigger :  */

SET TERM ^ ;

CREATE TRIGGER BI_STATUS_ID FOR STATUS
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
      NEW.ID = GEN_ID(STATUS_ID_GEN, 1);
END^

SET TERM ; ^

/* Definition for the `BI_TIPOSYS_ID` trigger :  */

SET TERM ^ ;

CREATE TRIGGER BI_TIPOSYS_ID FOR TIPOSYS
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
      NEW.ID = GEN_ID(TIPOSYS_ID_GEN, 1);
END^

SET TERM ; ^

/* Definition for the `BI_USER_ID` trigger :  */

SET TERM ^ ;

CREATE TRIGGER BI_USER_ID FOR "USER"
ACTIVE BEFORE INSERT
POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN
      NEW.ID = GEN_ID(USER_ID_GEN, 1);
END^

SET TERM ; ^


/* Privilegies for the `CLIENTE` :  */

GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON CLIENTE TO SYSDBA WITH GRANT OPTION;


/* Privilegies for the `CONTADOR` :  */

GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON CONTADOR TO SYSDBA WITH GRANT OPTION;


/* Privilegies for the `FISCAL` :  */

GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON FISCAL TO SYSDBA WITH GRANT OPTION;


/* Privilegies for the `STATUS` :  */

GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON STATUS TO SYSDBA WITH GRANT OPTION;


/* Privilegies for the `TIPOSYS` :  */

GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON TIPOSYS TO SYSDBA WITH GRANT OPTION;


/* Privilegies for the `USER` :  */

GRANT SELECT, INSERT, DELETE, REFERENCES, UPDATE ON "USER" TO SYSDBA WITH GRANT OPTION;



